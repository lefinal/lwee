"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4663],{6326:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var i=t(5893),o=t(1151);const a={sidebar_position:0},s="Actions",r={id:"actions/index",title:"Actions",description:"Actions describe operations to be performed on data.",source:"@site/docs/actions/index.mdx",sourceDirName:"actions",slug:"/actions/",permalink:"/lwee/actions/",draft:!1,unlisted:!1,editUrl:"https://github.com/lefinal/lwee/docs/docs/actions/index.mdx",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/lwee/usage"},next:{title:"Command Action",permalink:"/lwee/actions/command-action"}},c={},l=[{value:"Action definition",id:"action-definition",level:2},{value:"Templating",id:"templating",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"actions",children:"Actions"}),"\n",(0,i.jsx)(n.p,{children:"Actions describe operations to be performed on data.\nEach action consists of:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Input definitions"}),"\n",(0,i.jsx)(n.li,{children:"Operation to run"}),"\n",(0,i.jsx)(n.li,{children:"Output definitions"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Inputs and outputs are described in the ",(0,i.jsx)(n.a,{href:"/lwee/action-io",children:"Action IO section"}),".\nHere, we focus on the operations."]}),"\n",(0,i.jsx)(n.p,{children:"Operations are available in different types.\nSee the subsections for available ones.\nEach type along with its options, describes how the operation is being run."}),"\n",(0,i.jsx)(n.p,{children:"The naive way is to run a local program or command.\nHowever, this introduces compatibility issues if the same workflow is run in a different environment like another machine.\nTherefore, it is recommended to use containers instead."}),"\n",(0,i.jsx)(n.p,{children:"When running a workflow, the scheduler keeps track of all inputs and outputs.\nOnce all inputs of an action are opened (ready to send data), the action is being started.\nDepending on input types, input ingestion might be done before this happens, like when files are required.\nThe operation is then being run until it exits.\nIf the exit code is not zero, the action is considered failed and will stop the workflow execution."}),"\n",(0,i.jsx)(n.h2,{id:"action-definition",children:"Action definition"}),"\n",(0,i.jsx)(n.p,{children:"An action definition looks like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'# Optional description for documentation.\ndescription: ""\n# Input descriptions consist of a key-value map.\n# Properly named inputs also serve better human-readability.\nin:\n  myInput1:\n    # Data source. Required.\n    source: flow.in.myData\n    # How to provide the data to the operation. Required.\n    provideAs: stdin\n  myInput2:\n    # ...\n# Run configuration.\nrun:\n  # Type of the run-operation. Required.\n  type: proj-action\n  # Operation related configuration.\n  name: to-uppercase\n# Output descriptions consist of a key-value map.\nout:\n  myOutput:\n    # How to read the data from the operation. Required.\n    providedAs: stdout\n'})}),"\n",(0,i.jsx)(n.h2,{id:"templating",children:"Templating"}),"\n",(0,i.jsxs)(n.p,{children:["Depending on the action and IO type, templating support may be available.\nThis allows using ",(0,i.jsx)(n.a,{href:"https://pkg.go.dev/text/template",children:"Go template syntax"})," to render values at runtime."]}),"\n",(0,i.jsxs)(n.p,{children:["You can access the whole workflow in its raw representation as map via ",(0,i.jsx)(n.code,{children:".Flow.Raw"}),".\nFor example, if you want to fill in the source type of an input, you can use"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-gotemplate",children:"{{ .Flow.Raw.actions.myActionName.in.myInputName.source }}\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can also incorporate details regarding the current action."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".Action.Name"}),": The name of the action."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".Action.Extras"}),": See the specific action types for details."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example action for reading file info:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'in:\n  entries:\n    source: flow.in.weatherData\n    provideAs: workspace-file\n    filename: "weather-data.txt"\nrun:\n  type: command\n  command:\n    - "stat"\n    - "{{ .Action.Extras.WorkspaceDir }}/{{ .Flow.Raw.actions.fileInfo.in.entries.filename }}"\nout:\n  fileInfo:\n    providedAs: stdout\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>s});var i=t(7294);const o={},a=i.createContext(o);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);